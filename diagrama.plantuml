@startuml Gerenciamento de Exames Medicos

    class Agenda{
        - hora : String
        - sala : Sala
        - exame : Exames
        - especialidade : Especialidade
        + construtor(hora, sala, exame)
        + getHora()
        + setHora(hora)
        + getSala()
        + setSala(sala)
        + getExame()
        + setExame(exame)
        + getEspecialidade()
        + setEspecialidade(especialidade)
        + verificarHorario(hora, sala)
        + agendarExame(exame, especialidade)
    }

    class Paciente{
        - nome : String
        - idade : Integer
        + construtor(nome, idade)
        + getNome()
        + getIdade()
        + setNome(nome)
        + setIdade(idade)
    }

    class CadastroPaciente{
        - cpf : Integer
        - endereco : Endereco
        - telefone : Integer
        - paciente : Paciente
        + construtor(cpf, endereco, telefone, paciente)
        + getCPF()
        + getEndereco()
        + getTelefone()
        + setCPF(cpf)
        + setEndereco(endereco)
        + setTelefone(telefone)
        + verificaCadastro(paciente, cpf, endereco, telefone)
    }

    class Medico{
        - nome : String
        - idade : Integer
        - CRM : Integer
        - paciente : Paciente
        + construtor(nome, idade, crm, paciente)
        + getNome()
        + getIdade()
        + getCRM()
        + getPaciente()
        + setNome(nome)
        + setIdade(idade)
        + setCRM(crm)
        + setPaciente(paciente)
    }

    class Exames{
        - nome : String
        - tipoExame : String
        + construtor(nome, tipoExame)
        + getNome()
        + getTipoExame()
        + setNome(nome)
        + setTipoExame(exame)
    }

    class Especialidade{
        - nome : String
        - medico : Medico
        + construtor(nome, medico)
        + getNome()
        + getMedico()
        + setNome(especialidade)
        + setMedico(medico)
    }

    class Clinica{
        - nome : String
        - endereco : Endereco
        - telefone : Integer
        + construtor(nome, endereco, telefone)
        + getNome()
        + getEndereco()
        + getTelefone()
        + setNome(nomeClinica)
        + setEndereco(endereco)
        + setTelefone(telefone)
    }

    class Sala{
        - numeroSala : Integer
        - andar : Integer
        - clinica : Clinica
        + construtor(numeroSala, andar, clinica)
        + getNumeroSala()
        + getAndar()
        + getClinica()
        + setNumeroSala(numeroSala)
        + setAndar(andar)
        + setClinica(clinica)
    }

    class Endereco{
        - nomeRua : String
        - numero : Integer
        - bairro : String
        - cidade : String
        + construtor(nomeRua, numero, bairro, cidade)
    }

    class Telefone{
        - ddd : Integer
        - numero : Integer
        + construtor(ddd, numero)
    }

    Paciente <|--> CadastroPaciente
    Paciente <|--> Medico
    Medico *--> Especialidade
    Exames *--> Agenda
    Sala *--> Agenda
    Agenda <--* Especialidade
    Clinica *--> Sala
    Clinica <--* Endereco
    CadastroPaciente <--* Endereco

@enduml